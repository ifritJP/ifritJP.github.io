#+TITLE: 17. Interface
# -*- coding:utf-8 -*-
#+AUTHOR: ifritJP
#+STARTUP: nofold
#+OPTIONS: ^:{}
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-mode-document.css" />

LuneScript does not support multiple inheritance of classes, but instead supports interfaces.


* interface

If you're using Java or C #, you're probably familiar with it, but you can think of an interface as a class with limited functionality.

Specifically, interfaces differ from classes in the following ways:
- The declaration is interface, not class.
- I can't have a member.
- All methods are abstract. Therefore, an instance cannot be created by the interface alone.
- Classes that implement the interface add () to extend
- Classes can implement multiple interfaces
- Do not add override to the method of the class that implements the interface.
The following is an example of the interface.
#+BEGIN_SRC lns
// @lnsFront: ok
interface IF {
   pub fn func();
}
class Test extend (IF) {
   pub fn func() {
      print( __func__ );
   }
}
fn sub( obj:IF ) {
   obj.func();
}
sub( new Test() ); // Test.func
#+END_SRC


This example defines an interface IF.

The following is an example of a class that implements the two interfaces.
#+BEGIN_SRC lns
// @lnsFront: ok
interface IF1 {
   pub fn func1();
}
interface IF2 {
   pub fn func2();
}
class Test extend (IF1,IF2) {
   pub fn func1() {
      print( __func__ );
   }
   pub fn func2() {
      print( __func__ );
   }
}
fn sub( obj1:IF1, obj2:IF2 ) {
   obj1.func1();
   obj2.func2();
}
let mut test = new Test();
sub( test, test ); // Test.func Test.func2
#+END_SRC


If you want to implement multiple interfaces, declare extend followed by ().

By the way, as a limitation when implementing multiple interfaces, if there are methods with the same name but different types in the interface to be implemented as follows, an error will occur.
#+BEGIN_SRC lns
// @lnsFront: error
interface IF1 {
   pub fn func():int;
}
interface IF2 {
   pub fn func():str;
}
class Test extend (IF1,IF2) { // mismatch IF1.func, IF2.func
}
#+END_SRC


Note that the current interface specifications do not support method default processing.


* summary

LuneScript does not support multiple inheritance of classes, but instead supports interfaces.

Next time, I'll talk about Mapping.
