<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jekyll on hoge blog</title>
    <link>https://ifritjp.github.io/blog2/public/tags/jekyll/</link>
    <description>Recent content in jekyll on hoge blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 17 Jan 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://ifritjp.github.io/blog2/public/tags/jekyll/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LuneScript セルフホストビルド時の go スレッド状態</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-11-03-lunescript-selfhost-thread/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-11-03-lunescript-selfhost-thread/</guid>
      <description>LuneScript セルフホストビルド時の go スレッドの状態について調べてみました。 グラフの説明 次の図は、 go ランタイムのトレース機能(GODEBUG=sched</description>
    </item>
    
    <item>
      <title>LuneScript のソースコード規模とビルド時間の推移</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-10-29-lunescript-performance-history/</link>
      <pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-10-29-lunescript-performance-history/</guid>
      <description>LuneScript のソースコード規模まとめをやったのが、3年前の 2020/10/1。 ../../2020/2020-10-01-lunescript-codesize/ 3年経ったのでそろそろ振り返りをやっても良い頃だろう、ということで、 今</description>
    </item>
    
    <item>
      <title>PC9801-OS/V という PC9801 シリーズ向けの OS</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-10-23-pc9801-os-v/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-10-23-pc9801-os-v/</guid>
      <description>そろそろ Windows12 が出ると噂されている。 自分の PC 環境は win10 が現役で、 win11 を入れる前にもう win12 なのかと、 なんとも微妙な気持ちがある。 Windows が普及し始めた時代 とこ</description>
    </item>
    
    <item>
      <title>お金にまつわる話し</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-30-security/</link>
      <pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-30-security/</guid>
      <description>今回のネタは、これまでとちょっと違った毛色のネタである。 ネタの背景 日本人あるあるだと思うが、 これまでほとんど 「お金を運用する」 ということを や</description>
    </item>
    
    <item>
      <title>Wireguard &#43; docker で簡単 VPN 構築</title>
      <link>https://ifritjp.github.io/blog2/public/drafts/2023-09-03-wireguard-on-docker/</link>
      <pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/drafts/2023-09-03-wireguard-on-docker/</guid>
      <description>kptunnel を使うことで、異なるネットワーク間の通信を転送することができる。 ただ、 kptunnel は指定した TCP ポートに限って転送するので、 不特定の通信を転送したい時</description>
    </item>
    
    <item>
      <title>Microsoft アカウントの生年月日設定</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-02-microsoft_account_birthday/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-02-microsoft_account_birthday/</guid>
      <description>久々にプライベートのアカウントで teams にアクセスしようとしたら、 未成年だから使えない、というような内容が表示された。 「どういうことっちゃ？」と思</description>
    </item>
    
    <item>
      <title>Windows のマイクの音が小さい(というか無音)</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-02-mic_volume/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-09-02-mic_volume/</guid>
      <description>普段ウェブ会議には使わない作業用 PC でウェブ会議をしようと思い、 会議の少し前に外付けのマイクとカメラのセットアップを開始。 しかし、カメラは設定</description>
    </item>
    
    <item>
      <title>久々のネタ更新(さらに久々の lctags 更新)</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-07-23-lctags-update/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-07-23-lctags-update/</guid>
      <description>github に上げている個人的なツールの中で、 スターの付いている数少ないプロジェクトの1つである lctags。 これを久し振りに更新した。 更新内容は以下</description>
    </item>
    
    <item>
      <title>monaco editor に自作言語拡張(インデント、補完、syntax エラー)を登録する</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-04-23-monago/</link>
      <pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-04-23-monago/</guid>
      <description>次の URL で提供している LuneScript playground 環境のエディタを、 シンプルな textarea からモダンな monaco editor に変更しました。 &amp;lt;https://ifritjp.github.io/LuneScript-webFront/lnsc_web_frontend/for_wasm/&amp;gt; 今回のネタは、monaco editor に独自言語の次の機能を追</description>
    </item>
    
    <item>
      <title>LuneScript のセルフホストビルド時間と GOMAXPROCS</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-03-19-gomaxprocs/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-03-19-gomaxprocs/</guid>
      <description>LuneScript のセルフホストビルド時間が1秒を切れない問題。 GOMAXPROCS を設定すれば、もしかしたら簡単に短縮できるのではないか？ と思って GOMAXPROCS を 1 〜 11 まで変えてみた。</description>
    </item>
    
    <item>
      <title>LuneScript のコレクション側を Go の generics を利用するように変更</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-02-27-go-generics3/</link>
      <pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-02-27-go-generics3/</guid>
      <description>&amp;lt;../../2023/2023-02-11-go-generics2/&amp;gt; 前回の記事で書いた通り、 go の generics のパフォーマンスが向上したため、 LuneScript の v1.6.0 で go の generics を利用するように対応しました。 なお、現状は collection 型の対応に限定して</description>
    </item>
    
    <item>
      <title>Golang の generics パフォーマンスがもの凄く改善されていた</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-02-11-go-generics2/</link>
      <pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-02-11-go-generics2/</guid>
      <description>以前 Golang 1.19.2 の generics のパフォーマンスを計測したところ、 generics を使ったケースと、自前で any からキャストするケースを比較すると、 なぜか自前で any からキャストする</description>
    </item>
    
    <item>
      <title>LuneScript のタプルの go 実装</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-29-tuple-implementation/</link>
      <pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-29-tuple-implementation/</guid>
      <description>LuneScript の v1.5.3 からタプルを対応している。 このタプルの go 実装についてパフォーマンスを調べた内容を載せておく。 LuneScript のタプルの go 変換初期実装 ここでは、Lun</description>
    </item>
    
    <item>
      <title>Raspberry pi に接続していた USB HDD が調子悪いので色々と対応してみた(未解決)</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-09-raspi-strange-hdd/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-09-raspi-strange-hdd/</guid>
      <description>Raspberry pi でサーバ運用を始めて約 2 年。 どうにも最近 Raspberry pi に接続している USB HDD の調子がイマイチだったので、 その対応を行なった。 ただし、未解決。。。 ここで</description>
    </item>
    
    <item>
      <title>actix-web (Rust の web フレームワーク)</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-06-actix-web/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2023/2023-01-06-actix-web/</guid>
      <description>Web サーバを作成するにあたり actix-web を使ってみたので、 初心者の目線から見た感想など。 actix-web 世の中には言語ごとに様々な web フレームワークがありますが、 actix-web は Rust</description>
    </item>
    
    <item>
      <title>Golang の WASM (JavaScript の非同期処理 async との連携)</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2022/2022-12-18-go-wasm-async/</link>
      <pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2022/2022-12-18-go-wasm-async/</guid>
      <description>go の wasm と、JavaScript の非同期処理との連携についてです。 基本的な go の wasm と JavaScript 間のインタフェースについては、 以前のネタを確認してください</description>
    </item>
    
    <item>
      <title>FDM 3D プリンタのスライス設定と STL エラー対策</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2022/2022-12-04-3d-printer-slice/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2022/2022-12-04-3d-printer-slice/</guid>
      <description>今回も引き続き 3D プリンタ系の話です。 3D プリントの出来 3D プリントの出来は次の要素で決まります。 3D プリンタの性能 フィラメントの性能 スライサーの性</description>
    </item>
    
    <item>
      <title>100 均で作る超お手軽・安価な 3D プリンタ用フィラメント除湿・送出・保管ボックス</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2022/2022-11-27-3d-printer-filament-box/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2022/2022-11-27-3d-printer-filament-box/</guid>
      <description>今回は珍しくソフト系のネタではなく、3D プリンタ系の話です。 FDM 式は面倒が少ない 3D プリンタを購入するにあたり、事前に色々と調べた結果、 光造形式</description>
    </item>
    
    <item>
      <title>Golang の Heap メモリ制限</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2022/2022-10-27-go-limit-heap/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2022/2022-10-27-go-limit-heap/</guid>
      <description>go は GC で heap メモリを管理している。 Java の場合、最大 heap サイズを指定し、 そのサイズを越えた場合は OutOfMemoryError になる。 最大 heap サイズが指定されていない場合はデフォ</description>
    </item>
    
    <item>
      <title>Golang の generics パフォーマンス</title>
      <link>https://ifritjp.github.io/blog2/public/posts/2022/2022-10-15-go-generics/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ifritjp.github.io/blog2/public/posts/2022/2022-10-15-go-generics/</guid>
      <description>LuneScript は、 Golang (1.16 以降)へのトランスコンパイルを対応しています。 また、LuneScript は Generics に対応しています。 一方で、 Golang は version 1.18 から Generics に対応していま</description>
    </item>
    
  </channel>
</rss>
