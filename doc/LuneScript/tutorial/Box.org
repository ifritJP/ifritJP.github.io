# -*- coding:utf-8 -*-
#+AUTHOR: ifritJP
#+STARTUP: nofold
#+OPTIONS: ^:{}
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-mode-document.css" />

#+TITLE: トランスコンパイラ LuneScript 入門 - Box 編


* Nilable 型

前述している通り、仮型パラメータは nilable にはなりえません。

この宣言により、次の ~new Test( val )~ はエラーになります。

#+BEGIN_SRC lns
class Test<T> {
   let val:T;
}
let val:int! = 1;
let test = new Test( val ); // error
#+END_SRC

これを対応するには、 2 つのパターンがあります。

- T! を利用する
- Nilable 型を利用する

「T! を利用する」のケースでは、上記処理は次のように書けます。

ただこの場合、unwrap 処理が必要だったり、
開発途中で nilable の対応が必要になったりして面倒です。

そこで、 Nilable 型を利用します。

** Nilable 型とは

Nilable 型は、 nilable の値をラッピングする型です。
Java で言うところの int に対する Integer クラスと思ってください。



