# -*- coding:utf-8 -*-
#+AUTHOR: ifritJP
#+STARTUP: nofold
#+OPTIONS: ^:{}
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-mode-document.css" />

#+TITLE: トランスコンパイラ LuneScript チュートリアル 一般制御構文 編

今回は LuneScript の一般制御構文について説明します。

* 構文一覧

LuneScript は、次の一般制御構文をサポートします。

- if
- switch
- while
- repeat
- for
- apply
- foreach
- forsort  

ちなみに、ここであえて「一般分岐制御」としているのは、
nilable 制御で別途分岐制御があるためです。

** if

if 文は、次のように使用します。

#+BEGIN_SRC lns
let val = 1;
if val == 1 {
   print( "hoge" );
}
elseif val == 2 {
   print( "foo" );
}
else {
   print( "bar" );
}
#+END_SRC

説明は不要かと思いますが、次のように処理されます。

- if の式が成立している場合、 if のブロックが実行される。
- if の式が不成立で elseif の式が成立している場合、elseif のブロックが実行される。
- 全ての式が不成立の場合、else のブロックが実行される。
- elseif は存在しても良い。
- 式が *「不成立」* する条件は、その式の結果が nil か false の時。

* switch

switch 文は次のように使用します。

#+BEGIN_SRC lns
let val = 1;
switch ( val ) {
   case 1 {
      print( "hoge" );
   }
   case 2 {
      print( "foo" );
   }
   default {
      print( "bar" );
   }
}
#+END_SRC

なおこのサンプルは、上記 if のサンプルと同義です。

switch の case には、次のように複数の式を書けます。

#+BEGIN_SRC lns
let val = 1;
switch ( val ) {
   case 10, 20, 30 {
      print( "hoge" );
   }
   default {
      print( "bar" );
   }
}
#+END_SRC

これは次の if 文と同義です。

#+BEGIN_SRC lns
let val = 1;
if val == 10 and val == 20 and val == 30 {
   print( "hoge" );
}
else {
   print( "bar" );
}
#+END_SRC

switch 文で注意すべき点は、 C 言語などと違い break が不要であることです。

例えば次の break は、 for 文を抜けることになります。

#+BEGIN_SRC lns
for count = 1, 2 {
   switch count {
      case 5 {
         break;
      }
   }
}
#+END_SRC
